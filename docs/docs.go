// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/item": {
            "get": {
                "description": "get item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Root"
                ],
                "summary": "Get item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "item id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Item"
                        }
                    }
                }
            }
        },
        "/items": {
            "get": {
                "description": "get items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Root"
                ],
                "summary": "Get items",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "page index",
                        "name": "pi",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "page size",
                        "name": "ps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Item"
                            }
                        }
                    }
                }
            }
        },
        "/listRequests": {
            "get": {
                "description": "Get list requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Root"
                ],
                "summary": "Get list requests",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserItemResponse"
                            }
                        }
                    }
                }
            }
        },
        "/postRequest": {
            "post": {
                "description": "Tracking borrowed items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Root"
                ],
                "summary": "Tracking borrowed items",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "item id",
                        "name": "itemId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "date to",
                        "name": "df",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "date from",
                        "name": "dt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Get user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Root"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Item": {
            "type": "object",
            "properties": {
                "availableItem": {
                    "type": "integer"
                },
                "availableQuantity": {
                    "type": "string"
                },
                "availableStatus": {},
                "category": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "description": "days",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item": {
                    "type": "string"
                },
                "keeper": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "noteWhoIsBorrowing": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "popularity": {
                    "type": "integer"
                },
                "priceDay": {
                    "description": "for borrow"
                },
                "productLink": {
                    "type": "string"
                },
                "rating": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "models.UserItem": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "fromDate": {
                    "type": "integer"
                },
                "itemId": {
                    "type": "integer"
                },
                "status": {
                    "description": "Approved, Pending, Rejected",
                    "type": "string"
                },
                "toDate": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.UserItemResponse": {
            "type": "object",
            "properties": {
                "itemName": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "userItem": {
                    "$ref": "#/definitions/models.UserItem"
                },
                "userName": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger API easy-bazaar",
	Description:      "Swagger API easy-bazaar.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
